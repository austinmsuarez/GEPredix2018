#!/bin/bash
#export MAVEN_OPTS="-Dmaven.repo.local=/opt/jenkins_build/workspace/Predix-Adoption/repository"
set -x
set -e
pwd

if [[ "$MAVEN_SETTINGS_FILE" == "" ]]; then
  MAVEN_SETTINGS_FILE="mvn_settings_snapshot_with_external.xml"
fi
#build so it resolves dependent jars
echo dollarone=$1

if [ -e .gitmodules ]; then
  echo "pullSubmodules"
  cp .gitmodules .gitmodules_orig
  cp scripts/.gitmodules_develop .gitmodules
  ./scripts/pullSubModules.sh
  mv .gitmodules_orig .gitmodules
fi
if [ -r ./scripts/deployPiDependencies.sh ]; then
  ./scripts/deployPiDependencies.sh
fi
mvn clean compile -B -s "$1/library/scripts/$MAVEN_SETTINGS_FILE"
echo "mvn clean compile complete, dependent jars resolved"

#update the version of the pom
#echo "mvn build-helper:parse-version versions:set -DnewVersion="\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-\${parsedVersion.qualifier}" -s $1/library/scripts/$MAVEN_SETTINGS_FILE;"
#mvn build-helper:parse-version versions:set -DnewVersion="\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-\${parsedVersion.qualifier}" -s "$1/library/scripts/$MAVEN_SETTINGS_FILE"


#parent pom
echo "parse parent pom"
mvn build-helper:parse-version versions:set -B -DnewVersion="\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-\${parsedVersion.qualifier}"  -s "$1/library/scripts/$MAVEN_SETTINGS_FILE"
echo "mvn parse parent pom for removal of SNAPSHOT complete"
if [ ! -e .gitmodules ]; then
  for d in */; do
    # Will print */ if no directories are available
    echo "$d"
    cd $d
    if [ -e pom.xml ]; then
      echo "parsing child pom"
      echo "don't worry about that java.io.FileNotFoundException, it happens on child projects but it works any way"
      mvn build-helper:parse-version versions:set -B -DnewVersion="\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-\${parsedVersion.qualifier}"  -s "$1/library/scripts/$MAVEN_SETTINGS_FILE"
      echo "parsing child pom complete"
    fi
    cd ..
  done
fi
#parent pom
echo "updating parent pom and/or multi-module poms"
mvn versions:update-properties -B -Dincludes="com.ge.predix.*" -DallowSnapshots=true -s library/scripts/$MAVEN_SETTINGS_FILE
echo "updating parent pom and multi-module poms complete"

#deploy to artifactory, need to do this now because the BUILD is asynchronous
mvn -DskipTests -B -DaltDeploymentRepository=artifactory.snapshots::default::https://devcloud.swcoe.ge.com/artifactory/PREDIX-SNAPSHOT -DaltSnapshotDeploymentRepository=artifactory.snapshots::default::https://devcloud.swcoe.ge.com/artifactory/PREDIX-SNAPSHOT deploy -U -s library/scripts/$MAVEN_SETTINGS_FILE

#update the manifest too
for f in $(find . -name '*.yml*'); do
  echo "manifest file is $f" ;
  #pom_version=`mvn org.apache.maven.plugins:maven-help-plugin:2.2:evaluate -Dexpression=project.version -s $1/library/scripts/mvn_settings_snapshot.xml |grep -Ev '(^\[|Download\w+:)'`;
  pom_version=$(printf 'POM_VERSION=${project.version}\n0\n' | mvn org.apache.maven.plugins:maven-help-plugin:2.2:evaluate 2>/dev/null | grep '^POM_VERSION' | awk -F"=" '{print $2}')
  echo pom version=$pom_version
  sed -i -r "s/[0-9].[0-9].[0-9][0-9]*-SNAPSHOT/$pom_version/g" $f
done

#is this needed? commenting out 2/19/18
#$1/library/scripts/versionIncrementMavenDependencies.sh $1
