#!/bin/bash

set -e
set -x

GIT_URL=""
GIT_BRANCH=""
GIT_REPO=""

while true; do
  echo $1
  case "$1" in
  	-g)
	    GIT_URL="$2"
	    shift; shift;
	;;
	-b)
	    GIT_BRANCH="$2"
	    shift; shift;
	;;
	-r)
	    GIT_REPO="$2"
	    shift; shift;
	;;
        --push)
	    echo "pushToCloud found $2"
	    PUSH_TO_CLOUD="$2"
	    shift; shift;
	;;
        --npm)
	    echo "getFromNPM found $2"
	    GET_FROM_NPM="$2"
	    shift; shift;
	;;
	* ) break ;;
	# ? means invalid flag was passed.
	\?)
    	echo "Invalid option: $1" >&2
    	exit 1
    ;;
  esac
done



echo "Starting smoke test for $GIT_BRANCH branch, repo $GIT_REPO, at $GIT_URL..."
mkdir -p smoketest


if [ -e pom.xml ] || [ -e package.json ]; then
  workspace=`pwd`
  cd smoketest
  
  #get the repo either from NPM or from Github
  if [ "$GET_FROM_NPM" == "true" ]; then
    cd $workspace
    rm -rf *
    echo "Installing $GIT_REPO from npmjs.com ..."
    npm install $GIT_REPO
    ls -al
  else 
    echo "Cloning $GIT_URL..."
    git clone --branch $GIT_BRANCH $GIT_URL $GIT_REPO-$GIT_BRANCH
    cd $GIT_REPO-$GIT_BRANCH
  fi
fi

if [ -e pom.xml ]; then 
  if [ ! -e scripts/pullSubModules.sh ]; then
    echo "ensure dependencies are found externally and unit tests pass"
    mvn clean package -B -s $workspace/library/scripts/mvn_settings_external.xml
    echo "external mvn clean package complete"
  fi
fi

if [ -e package.json ]; then 
  if [ "$GET_FROM_NPM" == "false" ]; then
    npm install
    bower install
    gulp
  fi
fi

if [ -e manifest.yml ] && [ "$PUSH_TO_CLOUD" == "true" ]; then
  echo "Pushing to cloud"
  cf push --random-route
  echo "push to cloud complete"
fi

if [ -e version.json ]; then
  echo "run Quickstart"
fi
