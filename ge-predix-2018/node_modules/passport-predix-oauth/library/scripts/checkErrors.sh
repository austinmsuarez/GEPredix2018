#!/bin/bash

patterns="crd.ge.com|github.build.ge.com|svc.ice.ge.com|devcloud.swcoe.ge.com|>*-SNAPSHOT</"
hitCount=$(grep -E -r --exclude-dir=.git --exclude-dir=Org-migration --exclude-dir=target --exclude-dir=library --exclude=.gitmodules --exclude=release.sh --exclude=pom.xml.versionsBackup "$patterns" * | wc -l)
echo "hitcount1=$hitCount"
if [[ $hitCount -gt 0 ]]
then
	echo "Searching..."
	grep -E -r --exclude-dir=.git --exclude-dir=Org-migration --exclude-dir=target --exclude-dir=library --exclude=.gitmodules --exclude=release.sh --exclude=pom.xml.versionsBackup "$patterns" * --exclude=Jenkinsfile
	echo ""
	echo "hitCount=$hitCount. please fix files found by the grep command for strings like github.build.ge.com,devcloud.swcoe.ge.com,SNAPSHOT etc"
	echo ""
	exit 1
fi

hitCount=$( grep -ERIiL --exclude-dir=bower_components --exclude-dir=node_modules --exclude-dir=library --exclude-dir=target --include=README.md --include=readme.md "https://ga-beacon.appspot.com/UA-82773213-1" * | wc -l)
echo "hitcount2=$hitCount"
if [[ $hitCount -gt 0 ]]
then
	echo "Found README files without google analytics tag."
	grep -ERIiL --exclude-dir=bower_components --exclude-dir=node_modules --exclude-dir=library --exclude-dir=target --include=README.md --include=readme.md "https://ga-beacon.appspot.com/UA-82773213-1" *
	echo ""
	echo "hitCount=$hitCount. please fix files found by the grep command. All README files should contain google analytics tag."
	echo ""
	exit 1
fi

if [[ $IGNORE_VERSION == false ]]; then

	ROOT_DIR=$( cd $(dirname "$0") && pwd )
	echo $ROOT_DIR

	VERSION=`"$ROOT_DIR/version.sh"`
	VERSIONSTATUS=$?
	echo "Status=$VERSIONSTATUS"
	echo "Version=$VERSION"
	if [ "$VERSIONSTATUS" == "1" ]; then
	  echo ""
	  echo "version file not found or is misconfigured"
	  exit 1
	fi

	#check if the tag exists on external repo
	# this script is called from the internal repo itself

	#EXISTING_TAG=$(git tag -l $VERSION)
	#echo "ExistingTag=$EXISTING_TAG"
	#if [[ "$EXISTING_TAG" == "$VERSION" ]]; then
	#    echo "Tag $VERSION already exists on internal git. Run with the -f flag to force tagging"
	#    exit 1
	#fi

	# get Tags from external repo
	EXTERNAL_TAG=$(curl -X GET https://$GIT_USER:$GIT_PASSWORD@api.github.com/repos/PredixDev/$REPO_NAME/tags | grep name |cut -f 2 -d: | cut -f 2 -d \")
	if [[ "EXTERNAL_TAG" == "$VERSION" ]]; then
	    echo "Tag $VERSION already exists on external git."
	    exit 1
	fi

fi
