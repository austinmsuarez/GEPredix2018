#!groovy

/**
* Send email, only if build failed or was fixed.
* This should be called from the `post` section, `always` condition:
    always {
      script {
        notifications.sendMail()
        notifications.sendFlowdockMsg()
      }
    }
*/
def sendMail() {
  def previousResult = currentBuild.previousBuild ? currentBuild.previousBuild.result : 'NONE'
  def changed = (currentBuild.currentResult != previousResult)
  echo "changed ${changed}"

  if (currentBuild.currentResult == 'FAILURE' || (changed && currentBuild.currentResult == 'SUCCESS')) {
    emailext (
      subject: "${currentBuild.currentResult}: Job ${env.JOB_NAME} Build ${currentBuild.number}",
      body: "See full console output at ${env.BUILD_URL}console",
      to: "predix.adoption@ge.com"
    )
  }
}

def sendFlowdockMsg() {
  def previousResult = currentBuild.previousBuild ? currentBuild.previousBuild.result : 'NONE'
  def changed = (currentBuild.currentResult != previousResult)
  echo "previousResult=${previousResult}"
  echo "changed? ${changed}"
  echo "currentBuild.currentResult=${currentBuild.currentResult}"


  if (currentBuild.currentResult == 'FAILURE' || (changed && currentBuild.currentResult == 'SUCCESS')) {
    emailext(
      subject: "${currentBuild.currentResult}: Job ${env.JOB_NAME} Build ${currentBuild.number}",
      body: "Build ${currentBuild.number}: See full console output at <a href=\"${env.BUILD_URL}console\">${env.BUILD_URL}console</a>",
      to: "devrel.team+${env.JOB_NAME}@ge-developer-cloud.flowdock.com",
      mimeType: "text/html"
    )
  }
}