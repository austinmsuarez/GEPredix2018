#!groovy

import com.cloudbees.plugins.credentials.*
import com.cloudbees.plugins.credentials.common.StandardUsernamePasswordCredentials
import java.util.Collections

/**
 * This method will login to US West, to a specific org & space.
 */
def loginToUSW() {
  echo "CloudFoundry loginToUSW function"
  login("https://api.system.aws-usw02-pr.ice.predix.io", "Predix_Builders_Hack", "integration", "cf_aws_creds")
}

def loginToFrankfurt() {
  echo "CloudFoundry loginToFrankfurt function"
  login("https://api.system.aws-eu-central-1-pr.ice.predix.io", "predix-adoption-jenkins-frankfurt", "integration", "cf_aws_frankfurt_creds")
}

def loginToJapan() {
  echo "CloudFoundry loginToJapan function"
  login("https://api.system.aws-jp01-pr.ice.predix.io", "predix-adoption-jenkins-jp01", "dev", "cf_aws_japan_creds")
}

def loginToUSEast() {
  echo "CloudFoundry loginToUSEast function"
  login("https://api.system.asv-pr.ice.predix.io", "predix-adoption-jenkins-asv-select", "integration", "cf_aws_useast_creds")
}

def loginToCF3() {
  echo "TODO: setup credentials"
}

def getCredentials(credentialId) {
  StandardUsernamePasswordCredentials matchedCredentials = null;
  List<StandardUsernamePasswordCredentials> credentialsList = CredentialsProvider.lookupCredentials(StandardUsernamePasswordCredentials.class);
  for (StandardUsernamePasswordCredentials c : credentialsList) {
    if (credentialId.equals(c.getId())) {
      matchedCredentials = c;
      break;
    }
  }
  return (StandardUsernamePasswordCredentials) matchedCredentials;
}

/**
 * Logs in to cloud foundry using jenkins credentials.
 * @param url - cloud foundry API endpoint
 * @param org - cloud foundry org
 * @param space - cloud foundry space
 * @param jenkinsCredId - identifier for a configured global Jenkins credential
 */
def login(String url, String org, String space, String jenkinsCredId) {
  echo "login to $url"
  def creds = getCredentials(jenkinsCredId)
  // println(creds.getUsername() + ":" + creds.getPassword())

  sh """#!/bin/bash -e
    sudo -u predix cf login -a ${url} --skip-ssl-validation -u ${creds.getUsername()} -p '${creds.getPassword()}' -o ${org} -s ${space}  
  """
}

def getDomain(pop) {
  def domain
  switch (pop) {    
    case "uswest":
      domain = "run.aws-usw02-pr.ice.predix.io"
      break
    case "useast":
      domain = "run.asv-pr.ice.predix.io"
      break
    case "frankfurt":
      domain = "run.aws-eu-central-1-pr.ice.predix.io"
      break
    case "japan":
      domain = "run.aws-jp01-pr.ice.predix.io"
      break
    case "cf3":
      domain = "run.aws-usw02-dev.ice.predix.io"
      break
  }
  return domain;         
}